@import "~bootstrap/scss/bootstrap-utilities";

.lazzle {
    max-width: 960px;
    margin-bottom: 5em;

    section {
        margin-bottom: 1.5rem;
    }
}

.levelCompleted {
    .levelCompletedCheckMark {
        position: absolute;
        color: $success;
        height: 4rem;
        width: 4rem;
        right: 0;
        bottom: 0;
    }
}
.levelUnlocked:hover, .levelCompleted:hover {
    .levelPreview .world {
        filter: none;
    }
}
.levelLocked {
    opacity: 0.5;
}

.levelPreview .world {
    filter: saturate(45%);
}

.worldContainer {
    border: 1px solid grey;
    position: relative;
}

.world {
    overflow: hidden;
    user-select: none;
}

.block {
    position: absolute;
    transition: top calc(0.2s / var(--speed, 1)) ease-out 0.1s;

    &.destroyed {
        animation: block-destroyed calc(0.2s / var(--speed, 1)) ease-out;
        animation-fill-mode: forwards;
    }
    &::after {
        /* border as shadow, translucent to have it adapt to the block's color */
        content: ' ';
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background-color: transparent;
        border: 1px solid #000000;
        border-right-color: #FFFFFF;
        border-bottom-color: #FFFFFF;
        opacity: 0.2;
    }
}

@keyframes block-destroyed {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
        transform: scale(3);
    }
}

.blockStrengthened {
    position: absolute; 
    width: 100%; 
    height: 100%;
    opacity: 0.4;
    background-position: left center;
    background-repeat: no-repeat;
    background-size: contain;
}

.blockStrengthened1 {
    background-image: url('./images/strengthened_1.svg');
}
.blockStrengthened2 {
    background-image: url('./images/strengthened_2.svg');
}

.matchingBlock {
    position: absolute;
    animation: block-matched calc(0.2s / var(--speed, 1)) ease-out;
    animation-fill-mode: forwards;

    svg {
        width: 100%;
        height: 100%;
    }

    &.wrongStrength {
        /* shield icons are too tall */
        padding: 4px;
    }
}

@keyframes block-matched {
    0% {
        opacity: 0;
        transform: scale(4);
    }
    100% {
        opacity: 1;
    }
}

.resultContainer {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.8);
    animation: fade-in 0.2s ease-in-out;
    animation-fill-mode: forwards;
}

.result {
    background-color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem;
}

.goalContainer {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.8);
    animation: fade-in 0.2s ease-in-out;
    animation-fill-mode: forwards;
    z-index: 2;
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

.intro {
    > p > svg {
        height: 1rem;
        width: 1rem;
    }

    > p > .block {
        display: inline-block;
        height: 1rem;
        width: 1rem;
    }

    > p > svg, > p > .block {
        position: relative;
        top: -0.1rem;
        vertical-align: middle;
        margin: 0 0.125rem;
    }

    .introLaserAimLine::after {
        content: '';
        height: 1px;
        display: inline-block;
        border-top: 2px dashed black;
        width: 2rem;
        margin-left: 0.5rem;
        margin-right: 0.5rem;
        vertical-align: middle;
    }

    .introUnmovable, .introUnrotatable {
        cursor: not-allowed;
    }
}

.editorSwitchMode {
    label {
        border-bottom-width: 0;
        margin-left: 0 !important;

        &:first-of-type {
            border-bottom-left-radius: 0;
        }
        &:last-of-type {
            border-bottom-right-radius: 0;
        }
    }
}

.editor {
    .block, .goalContainer {
        pointer-events: none;
    }
}

.blockAidLines {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
}

.blockAidLinesRow {
    display: flex;
}

.blockAidLinesCell {
    border: 1px solid rgb(200, 200, 200);
    border-bottom-width: 0;
    border-right-width: 0;
    cursor: pointer;

    &:last-child {
        border-right-width: 1px;
    }
    &:hover {
        background-color: rgb(230, 230, 230);
    }
}
.blockAidLinesRow:last-child .blockAidLinesCell {
    border-bottom-width: 1px;
}

.blockLink {
    position: absolute;
    transform: translate(-50%, -50%);
    opacity: 0;
    pointer-events: none;
    z-index: 1;
}
.blockLinkLeft {
    top: 50%;
    left: 0;

    > svg {
        transform: rotate(90deg);
    }
}
.blockLinkTop {
    top: 0;
    left: 50%;
}
.blockLinkActive {
    opacity: 0.9;
}

.tool-link {
    .blockLink {
        cursor: pointer;
        pointer-events: initial;
    }
    .blockLinkInactive {
        opacity: 0.2;
        &:hover {
            opacity: 0.7;
        }
    }
}

.exportOutput {
    font-family: var(--bs-font-monospace);
}